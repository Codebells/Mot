// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

#ifndef PROTOBUF_INCLUDED_message_2eproto
#define PROTOBUF_INCLUDED_message_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_message_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_message_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[7]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_message_2eproto();
namespace merge {
class MergeRequest;
class MergeRequestDefaultTypeInternal;
extern MergeRequestDefaultTypeInternal _MergeRequest_default_instance_;
class MergeRequestNew;
class MergeRequestNewDefaultTypeInternal;
extern MergeRequestNewDefaultTypeInternal _MergeRequestNew_default_instance_;
class MergeRequestNew_Transaction;
class MergeRequestNew_TransactionDefaultTypeInternal;
extern MergeRequestNew_TransactionDefaultTypeInternal _MergeRequestNew_Transaction_default_instance_;
class MergeRequestNew_Transaction_Row;
class MergeRequestNew_Transaction_RowDefaultTypeInternal;
extern MergeRequestNew_Transaction_RowDefaultTypeInternal _MergeRequestNew_Transaction_Row_default_instance_;
class MergeRequestNew_Transaction_Row_Column;
class MergeRequestNew_Transaction_Row_ColumnDefaultTypeInternal;
extern MergeRequestNew_Transaction_Row_ColumnDefaultTypeInternal _MergeRequestNew_Transaction_Row_Column_default_instance_;
class MergeRequest_Transaction;
class MergeRequest_TransactionDefaultTypeInternal;
extern MergeRequest_TransactionDefaultTypeInternal _MergeRequest_Transaction_default_instance_;
class MergeRequest_Transaction_Row;
class MergeRequest_Transaction_RowDefaultTypeInternal;
extern MergeRequest_Transaction_RowDefaultTypeInternal _MergeRequest_Transaction_Row_default_instance_;
}  // namespace merge
namespace google {
namespace protobuf {
template<> ::merge::MergeRequest* Arena::CreateMaybeMessage<::merge::MergeRequest>(Arena*);
template<> ::merge::MergeRequestNew* Arena::CreateMaybeMessage<::merge::MergeRequestNew>(Arena*);
template<> ::merge::MergeRequestNew_Transaction* Arena::CreateMaybeMessage<::merge::MergeRequestNew_Transaction>(Arena*);
template<> ::merge::MergeRequestNew_Transaction_Row* Arena::CreateMaybeMessage<::merge::MergeRequestNew_Transaction_Row>(Arena*);
template<> ::merge::MergeRequestNew_Transaction_Row_Column* Arena::CreateMaybeMessage<::merge::MergeRequestNew_Transaction_Row_Column>(Arena*);
template<> ::merge::MergeRequest_Transaction* Arena::CreateMaybeMessage<::merge::MergeRequest_Transaction>(Arena*);
template<> ::merge::MergeRequest_Transaction_Row* Arena::CreateMaybeMessage<::merge::MergeRequest_Transaction_Row>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace merge {

// ===================================================================

class MergeRequest_Transaction_Row :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:merge.MergeRequest.Transaction.Row) */ {
 public:
  MergeRequest_Transaction_Row();
  virtual ~MergeRequest_Transaction_Row();

  MergeRequest_Transaction_Row(const MergeRequest_Transaction_Row& from);

  inline MergeRequest_Transaction_Row& operator=(const MergeRequest_Transaction_Row& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MergeRequest_Transaction_Row(MergeRequest_Transaction_Row&& from) noexcept
    : MergeRequest_Transaction_Row() {
    *this = ::std::move(from);
  }

  inline MergeRequest_Transaction_Row& operator=(MergeRequest_Transaction_Row&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const MergeRequest_Transaction_Row& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MergeRequest_Transaction_Row* internal_default_instance() {
    return reinterpret_cast<const MergeRequest_Transaction_Row*>(
               &_MergeRequest_Transaction_Row_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(MergeRequest_Transaction_Row* other);
  friend void swap(MergeRequest_Transaction_Row& a, MergeRequest_Transaction_Row& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MergeRequest_Transaction_Row* New() const final {
    return CreateMaybeMessage<MergeRequest_Transaction_Row>(nullptr);
  }

  MergeRequest_Transaction_Row* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MergeRequest_Transaction_Row>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MergeRequest_Transaction_Row& from);
  void MergeFrom(const MergeRequest_Transaction_Row& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MergeRequest_Transaction_Row* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string tableName = 1;
  void clear_tablename();
  static const int kTableNameFieldNumber = 1;
  const ::std::string& tablename() const;
  void set_tablename(const ::std::string& value);
  #if LANG_CXX11
  void set_tablename(::std::string&& value);
  #endif
  void set_tablename(const char* value);
  void set_tablename(const char* value, size_t size);
  ::std::string* mutable_tablename();
  ::std::string* release_tablename();
  void set_allocated_tablename(::std::string* tablename);

  // bytes key = 2;
  void clear_key();
  static const int kKeyFieldNumber = 2;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const void* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // bytes data = 3;
  void clear_data();
  static const int kDataFieldNumber = 3;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:merge.MergeRequest.Transaction.Row)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr tablename_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MergeRequest_Transaction :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:merge.MergeRequest.Transaction) */ {
 public:
  MergeRequest_Transaction();
  virtual ~MergeRequest_Transaction();

  MergeRequest_Transaction(const MergeRequest_Transaction& from);

  inline MergeRequest_Transaction& operator=(const MergeRequest_Transaction& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MergeRequest_Transaction(MergeRequest_Transaction&& from) noexcept
    : MergeRequest_Transaction() {
    *this = ::std::move(from);
  }

  inline MergeRequest_Transaction& operator=(MergeRequest_Transaction&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const MergeRequest_Transaction& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MergeRequest_Transaction* internal_default_instance() {
    return reinterpret_cast<const MergeRequest_Transaction*>(
               &_MergeRequest_Transaction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(MergeRequest_Transaction* other);
  friend void swap(MergeRequest_Transaction& a, MergeRequest_Transaction& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MergeRequest_Transaction* New() const final {
    return CreateMaybeMessage<MergeRequest_Transaction>(nullptr);
  }

  MergeRequest_Transaction* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MergeRequest_Transaction>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MergeRequest_Transaction& from);
  void MergeFrom(const MergeRequest_Transaction& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MergeRequest_Transaction* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef MergeRequest_Transaction_Row Row;

  // accessors -------------------------------------------------------

  // repeated .merge.MergeRequest.Transaction.Row row = 2;
  int row_size() const;
  void clear_row();
  static const int kRowFieldNumber = 2;
  ::merge::MergeRequest_Transaction_Row* mutable_row(int index);
  ::google::protobuf::RepeatedPtrField< ::merge::MergeRequest_Transaction_Row >*
      mutable_row();
  const ::merge::MergeRequest_Transaction_Row& row(int index) const;
  ::merge::MergeRequest_Transaction_Row* add_row();
  const ::google::protobuf::RepeatedPtrField< ::merge::MergeRequest_Transaction_Row >&
      row() const;

  // uint64 TxnID = 1;
  void clear_txnid();
  static const int kTxnIDFieldNumber = 1;
  ::google::protobuf::uint64 txnid() const;
  void set_txnid(::google::protobuf::uint64 value);

  // uint64 startts = 3;
  void clear_startts();
  static const int kStarttsFieldNumber = 3;
  ::google::protobuf::uint64 startts() const;
  void set_startts(::google::protobuf::uint64 value);

  // uint64 committs = 4;
  void clear_committs();
  static const int kCommittsFieldNumber = 4;
  ::google::protobuf::uint64 committs() const;
  void set_committs(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:merge.MergeRequest.Transaction)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::merge::MergeRequest_Transaction_Row > row_;
  ::google::protobuf::uint64 txnid_;
  ::google::protobuf::uint64 startts_;
  ::google::protobuf::uint64 committs_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MergeRequest :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:merge.MergeRequest) */ {
 public:
  MergeRequest();
  virtual ~MergeRequest();

  MergeRequest(const MergeRequest& from);

  inline MergeRequest& operator=(const MergeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MergeRequest(MergeRequest&& from) noexcept
    : MergeRequest() {
    *this = ::std::move(from);
  }

  inline MergeRequest& operator=(MergeRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const MergeRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MergeRequest* internal_default_instance() {
    return reinterpret_cast<const MergeRequest*>(
               &_MergeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(MergeRequest* other);
  friend void swap(MergeRequest& a, MergeRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MergeRequest* New() const final {
    return CreateMaybeMessage<MergeRequest>(nullptr);
  }

  MergeRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MergeRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MergeRequest& from);
  void MergeFrom(const MergeRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MergeRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef MergeRequest_Transaction Transaction;

  // accessors -------------------------------------------------------

  // repeated .merge.MergeRequest.Transaction Txn = 1;
  int txn_size() const;
  void clear_txn();
  static const int kTxnFieldNumber = 1;
  ::merge::MergeRequest_Transaction* mutable_txn(int index);
  ::google::protobuf::RepeatedPtrField< ::merge::MergeRequest_Transaction >*
      mutable_txn();
  const ::merge::MergeRequest_Transaction& txn(int index) const;
  ::merge::MergeRequest_Transaction* add_txn();
  const ::google::protobuf::RepeatedPtrField< ::merge::MergeRequest_Transaction >&
      txn() const;

  // string request_address = 2;
  void clear_request_address();
  static const int kRequestAddressFieldNumber = 2;
  const ::std::string& request_address() const;
  void set_request_address(const ::std::string& value);
  #if LANG_CXX11
  void set_request_address(::std::string&& value);
  #endif
  void set_request_address(const char* value);
  void set_request_address(const char* value, size_t size);
  ::std::string* mutable_request_address();
  ::std::string* release_request_address();
  void set_allocated_request_address(::std::string* request_address);

  // @@protoc_insertion_point(class_scope:merge.MergeRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::merge::MergeRequest_Transaction > txn_;
  ::google::protobuf::internal::ArenaStringPtr request_address_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MergeRequestNew_Transaction_Row_Column :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:merge.MergeRequestNew.Transaction.Row.Column) */ {
 public:
  MergeRequestNew_Transaction_Row_Column();
  virtual ~MergeRequestNew_Transaction_Row_Column();

  MergeRequestNew_Transaction_Row_Column(const MergeRequestNew_Transaction_Row_Column& from);

  inline MergeRequestNew_Transaction_Row_Column& operator=(const MergeRequestNew_Transaction_Row_Column& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MergeRequestNew_Transaction_Row_Column(MergeRequestNew_Transaction_Row_Column&& from) noexcept
    : MergeRequestNew_Transaction_Row_Column() {
    *this = ::std::move(from);
  }

  inline MergeRequestNew_Transaction_Row_Column& operator=(MergeRequestNew_Transaction_Row_Column&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const MergeRequestNew_Transaction_Row_Column& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MergeRequestNew_Transaction_Row_Column* internal_default_instance() {
    return reinterpret_cast<const MergeRequestNew_Transaction_Row_Column*>(
               &_MergeRequestNew_Transaction_Row_Column_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(MergeRequestNew_Transaction_Row_Column* other);
  friend void swap(MergeRequestNew_Transaction_Row_Column& a, MergeRequestNew_Transaction_Row_Column& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MergeRequestNew_Transaction_Row_Column* New() const final {
    return CreateMaybeMessage<MergeRequestNew_Transaction_Row_Column>(nullptr);
  }

  MergeRequestNew_Transaction_Row_Column* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MergeRequestNew_Transaction_Row_Column>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MergeRequestNew_Transaction_Row_Column& from);
  void MergeFrom(const MergeRequestNew_Transaction_Row_Column& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MergeRequestNew_Transaction_Row_Column* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const void* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // uint64 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:merge.MergeRequestNew.Transaction.Row.Column)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  ::google::protobuf::uint64 id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MergeRequestNew_Transaction_Row :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:merge.MergeRequestNew.Transaction.Row) */ {
 public:
  MergeRequestNew_Transaction_Row();
  virtual ~MergeRequestNew_Transaction_Row();

  MergeRequestNew_Transaction_Row(const MergeRequestNew_Transaction_Row& from);

  inline MergeRequestNew_Transaction_Row& operator=(const MergeRequestNew_Transaction_Row& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MergeRequestNew_Transaction_Row(MergeRequestNew_Transaction_Row&& from) noexcept
    : MergeRequestNew_Transaction_Row() {
    *this = ::std::move(from);
  }

  inline MergeRequestNew_Transaction_Row& operator=(MergeRequestNew_Transaction_Row&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const MergeRequestNew_Transaction_Row& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MergeRequestNew_Transaction_Row* internal_default_instance() {
    return reinterpret_cast<const MergeRequestNew_Transaction_Row*>(
               &_MergeRequestNew_Transaction_Row_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(MergeRequestNew_Transaction_Row* other);
  friend void swap(MergeRequestNew_Transaction_Row& a, MergeRequestNew_Transaction_Row& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MergeRequestNew_Transaction_Row* New() const final {
    return CreateMaybeMessage<MergeRequestNew_Transaction_Row>(nullptr);
  }

  MergeRequestNew_Transaction_Row* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MergeRequestNew_Transaction_Row>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MergeRequestNew_Transaction_Row& from);
  void MergeFrom(const MergeRequestNew_Transaction_Row& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MergeRequestNew_Transaction_Row* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef MergeRequestNew_Transaction_Row_Column Column;

  // accessors -------------------------------------------------------

  // repeated .merge.MergeRequestNew.Transaction.Row.Column col = 3;
  int col_size() const;
  void clear_col();
  static const int kColFieldNumber = 3;
  ::merge::MergeRequestNew_Transaction_Row_Column* mutable_col(int index);
  ::google::protobuf::RepeatedPtrField< ::merge::MergeRequestNew_Transaction_Row_Column >*
      mutable_col();
  const ::merge::MergeRequestNew_Transaction_Row_Column& col(int index) const;
  ::merge::MergeRequestNew_Transaction_Row_Column* add_col();
  const ::google::protobuf::RepeatedPtrField< ::merge::MergeRequestNew_Transaction_Row_Column >&
      col() const;

  // string tableName = 1;
  void clear_tablename();
  static const int kTableNameFieldNumber = 1;
  const ::std::string& tablename() const;
  void set_tablename(const ::std::string& value);
  #if LANG_CXX11
  void set_tablename(::std::string&& value);
  #endif
  void set_tablename(const char* value);
  void set_tablename(const char* value, size_t size);
  ::std::string* mutable_tablename();
  ::std::string* release_tablename();
  void set_allocated_tablename(::std::string* tablename);

  // bytes key = 2;
  void clear_key();
  static const int kKeyFieldNumber = 2;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const void* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // @@protoc_insertion_point(class_scope:merge.MergeRequestNew.Transaction.Row)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::merge::MergeRequestNew_Transaction_Row_Column > col_;
  ::google::protobuf::internal::ArenaStringPtr tablename_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MergeRequestNew_Transaction :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:merge.MergeRequestNew.Transaction) */ {
 public:
  MergeRequestNew_Transaction();
  virtual ~MergeRequestNew_Transaction();

  MergeRequestNew_Transaction(const MergeRequestNew_Transaction& from);

  inline MergeRequestNew_Transaction& operator=(const MergeRequestNew_Transaction& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MergeRequestNew_Transaction(MergeRequestNew_Transaction&& from) noexcept
    : MergeRequestNew_Transaction() {
    *this = ::std::move(from);
  }

  inline MergeRequestNew_Transaction& operator=(MergeRequestNew_Transaction&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const MergeRequestNew_Transaction& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MergeRequestNew_Transaction* internal_default_instance() {
    return reinterpret_cast<const MergeRequestNew_Transaction*>(
               &_MergeRequestNew_Transaction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(MergeRequestNew_Transaction* other);
  friend void swap(MergeRequestNew_Transaction& a, MergeRequestNew_Transaction& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MergeRequestNew_Transaction* New() const final {
    return CreateMaybeMessage<MergeRequestNew_Transaction>(nullptr);
  }

  MergeRequestNew_Transaction* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MergeRequestNew_Transaction>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MergeRequestNew_Transaction& from);
  void MergeFrom(const MergeRequestNew_Transaction& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MergeRequestNew_Transaction* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef MergeRequestNew_Transaction_Row Row;

  // accessors -------------------------------------------------------

  // repeated .merge.MergeRequestNew.Transaction.Row row = 2;
  int row_size() const;
  void clear_row();
  static const int kRowFieldNumber = 2;
  ::merge::MergeRequestNew_Transaction_Row* mutable_row(int index);
  ::google::protobuf::RepeatedPtrField< ::merge::MergeRequestNew_Transaction_Row >*
      mutable_row();
  const ::merge::MergeRequestNew_Transaction_Row& row(int index) const;
  ::merge::MergeRequestNew_Transaction_Row* add_row();
  const ::google::protobuf::RepeatedPtrField< ::merge::MergeRequestNew_Transaction_Row >&
      row() const;

  // uint64 TxnID = 1;
  void clear_txnid();
  static const int kTxnIDFieldNumber = 1;
  ::google::protobuf::uint64 txnid() const;
  void set_txnid(::google::protobuf::uint64 value);

  // uint64 startts = 3;
  void clear_startts();
  static const int kStarttsFieldNumber = 3;
  ::google::protobuf::uint64 startts() const;
  void set_startts(::google::protobuf::uint64 value);

  // uint64 committs = 4;
  void clear_committs();
  static const int kCommittsFieldNumber = 4;
  ::google::protobuf::uint64 committs() const;
  void set_committs(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:merge.MergeRequestNew.Transaction)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::merge::MergeRequestNew_Transaction_Row > row_;
  ::google::protobuf::uint64 txnid_;
  ::google::protobuf::uint64 startts_;
  ::google::protobuf::uint64 committs_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class MergeRequestNew :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:merge.MergeRequestNew) */ {
 public:
  MergeRequestNew();
  virtual ~MergeRequestNew();

  MergeRequestNew(const MergeRequestNew& from);

  inline MergeRequestNew& operator=(const MergeRequestNew& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MergeRequestNew(MergeRequestNew&& from) noexcept
    : MergeRequestNew() {
    *this = ::std::move(from);
  }

  inline MergeRequestNew& operator=(MergeRequestNew&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const MergeRequestNew& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MergeRequestNew* internal_default_instance() {
    return reinterpret_cast<const MergeRequestNew*>(
               &_MergeRequestNew_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(MergeRequestNew* other);
  friend void swap(MergeRequestNew& a, MergeRequestNew& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MergeRequestNew* New() const final {
    return CreateMaybeMessage<MergeRequestNew>(nullptr);
  }

  MergeRequestNew* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MergeRequestNew>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MergeRequestNew& from);
  void MergeFrom(const MergeRequestNew& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MergeRequestNew* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef MergeRequestNew_Transaction Transaction;

  // accessors -------------------------------------------------------

  // repeated .merge.MergeRequestNew.Transaction Txn = 1;
  int txn_size() const;
  void clear_txn();
  static const int kTxnFieldNumber = 1;
  ::merge::MergeRequestNew_Transaction* mutable_txn(int index);
  ::google::protobuf::RepeatedPtrField< ::merge::MergeRequestNew_Transaction >*
      mutable_txn();
  const ::merge::MergeRequestNew_Transaction& txn(int index) const;
  ::merge::MergeRequestNew_Transaction* add_txn();
  const ::google::protobuf::RepeatedPtrField< ::merge::MergeRequestNew_Transaction >&
      txn() const;

  // string request_address = 2;
  void clear_request_address();
  static const int kRequestAddressFieldNumber = 2;
  const ::std::string& request_address() const;
  void set_request_address(const ::std::string& value);
  #if LANG_CXX11
  void set_request_address(::std::string&& value);
  #endif
  void set_request_address(const char* value);
  void set_request_address(const char* value, size_t size);
  ::std::string* mutable_request_address();
  ::std::string* release_request_address();
  void set_allocated_request_address(::std::string* request_address);

  // @@protoc_insertion_point(class_scope:merge.MergeRequestNew)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::merge::MergeRequestNew_Transaction > txn_;
  ::google::protobuf::internal::ArenaStringPtr request_address_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_message_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MergeRequest_Transaction_Row

// string tableName = 1;
inline void MergeRequest_Transaction_Row::clear_tablename() {
  tablename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MergeRequest_Transaction_Row::tablename() const {
  // @@protoc_insertion_point(field_get:merge.MergeRequest.Transaction.Row.tableName)
  return tablename_.GetNoArena();
}
inline void MergeRequest_Transaction_Row::set_tablename(const ::std::string& value) {
  
  tablename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:merge.MergeRequest.Transaction.Row.tableName)
}
#if LANG_CXX11
inline void MergeRequest_Transaction_Row::set_tablename(::std::string&& value) {
  
  tablename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:merge.MergeRequest.Transaction.Row.tableName)
}
#endif
inline void MergeRequest_Transaction_Row::set_tablename(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  tablename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:merge.MergeRequest.Transaction.Row.tableName)
}
inline void MergeRequest_Transaction_Row::set_tablename(const char* value, size_t size) {
  
  tablename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:merge.MergeRequest.Transaction.Row.tableName)
}
inline ::std::string* MergeRequest_Transaction_Row::mutable_tablename() {
  
  // @@protoc_insertion_point(field_mutable:merge.MergeRequest.Transaction.Row.tableName)
  return tablename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MergeRequest_Transaction_Row::release_tablename() {
  // @@protoc_insertion_point(field_release:merge.MergeRequest.Transaction.Row.tableName)
  
  return tablename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MergeRequest_Transaction_Row::set_allocated_tablename(::std::string* tablename) {
  if (tablename != nullptr) {
    
  } else {
    
  }
  tablename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tablename);
  // @@protoc_insertion_point(field_set_allocated:merge.MergeRequest.Transaction.Row.tableName)
}

// bytes key = 2;
inline void MergeRequest_Transaction_Row::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MergeRequest_Transaction_Row::key() const {
  // @@protoc_insertion_point(field_get:merge.MergeRequest.Transaction.Row.key)
  return key_.GetNoArena();
}
inline void MergeRequest_Transaction_Row::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:merge.MergeRequest.Transaction.Row.key)
}
#if LANG_CXX11
inline void MergeRequest_Transaction_Row::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:merge.MergeRequest.Transaction.Row.key)
}
#endif
inline void MergeRequest_Transaction_Row::set_key(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:merge.MergeRequest.Transaction.Row.key)
}
inline void MergeRequest_Transaction_Row::set_key(const void* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:merge.MergeRequest.Transaction.Row.key)
}
inline ::std::string* MergeRequest_Transaction_Row::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:merge.MergeRequest.Transaction.Row.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MergeRequest_Transaction_Row::release_key() {
  // @@protoc_insertion_point(field_release:merge.MergeRequest.Transaction.Row.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MergeRequest_Transaction_Row::set_allocated_key(::std::string* key) {
  if (key != nullptr) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:merge.MergeRequest.Transaction.Row.key)
}

// bytes data = 3;
inline void MergeRequest_Transaction_Row::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MergeRequest_Transaction_Row::data() const {
  // @@protoc_insertion_point(field_get:merge.MergeRequest.Transaction.Row.data)
  return data_.GetNoArena();
}
inline void MergeRequest_Transaction_Row::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:merge.MergeRequest.Transaction.Row.data)
}
#if LANG_CXX11
inline void MergeRequest_Transaction_Row::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:merge.MergeRequest.Transaction.Row.data)
}
#endif
inline void MergeRequest_Transaction_Row::set_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:merge.MergeRequest.Transaction.Row.data)
}
inline void MergeRequest_Transaction_Row::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:merge.MergeRequest.Transaction.Row.data)
}
inline ::std::string* MergeRequest_Transaction_Row::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:merge.MergeRequest.Transaction.Row.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MergeRequest_Transaction_Row::release_data() {
  // @@protoc_insertion_point(field_release:merge.MergeRequest.Transaction.Row.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MergeRequest_Transaction_Row::set_allocated_data(::std::string* data) {
  if (data != nullptr) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:merge.MergeRequest.Transaction.Row.data)
}

// -------------------------------------------------------------------

// MergeRequest_Transaction

// uint64 TxnID = 1;
inline void MergeRequest_Transaction::clear_txnid() {
  txnid_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MergeRequest_Transaction::txnid() const {
  // @@protoc_insertion_point(field_get:merge.MergeRequest.Transaction.TxnID)
  return txnid_;
}
inline void MergeRequest_Transaction::set_txnid(::google::protobuf::uint64 value) {
  
  txnid_ = value;
  // @@protoc_insertion_point(field_set:merge.MergeRequest.Transaction.TxnID)
}

// repeated .merge.MergeRequest.Transaction.Row row = 2;
inline int MergeRequest_Transaction::row_size() const {
  return row_.size();
}
inline void MergeRequest_Transaction::clear_row() {
  row_.Clear();
}
inline ::merge::MergeRequest_Transaction_Row* MergeRequest_Transaction::mutable_row(int index) {
  // @@protoc_insertion_point(field_mutable:merge.MergeRequest.Transaction.row)
  return row_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::merge::MergeRequest_Transaction_Row >*
MergeRequest_Transaction::mutable_row() {
  // @@protoc_insertion_point(field_mutable_list:merge.MergeRequest.Transaction.row)
  return &row_;
}
inline const ::merge::MergeRequest_Transaction_Row& MergeRequest_Transaction::row(int index) const {
  // @@protoc_insertion_point(field_get:merge.MergeRequest.Transaction.row)
  return row_.Get(index);
}
inline ::merge::MergeRequest_Transaction_Row* MergeRequest_Transaction::add_row() {
  // @@protoc_insertion_point(field_add:merge.MergeRequest.Transaction.row)
  return row_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::merge::MergeRequest_Transaction_Row >&
MergeRequest_Transaction::row() const {
  // @@protoc_insertion_point(field_list:merge.MergeRequest.Transaction.row)
  return row_;
}

// uint64 startts = 3;
inline void MergeRequest_Transaction::clear_startts() {
  startts_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MergeRequest_Transaction::startts() const {
  // @@protoc_insertion_point(field_get:merge.MergeRequest.Transaction.startts)
  return startts_;
}
inline void MergeRequest_Transaction::set_startts(::google::protobuf::uint64 value) {
  
  startts_ = value;
  // @@protoc_insertion_point(field_set:merge.MergeRequest.Transaction.startts)
}

// uint64 committs = 4;
inline void MergeRequest_Transaction::clear_committs() {
  committs_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MergeRequest_Transaction::committs() const {
  // @@protoc_insertion_point(field_get:merge.MergeRequest.Transaction.committs)
  return committs_;
}
inline void MergeRequest_Transaction::set_committs(::google::protobuf::uint64 value) {
  
  committs_ = value;
  // @@protoc_insertion_point(field_set:merge.MergeRequest.Transaction.committs)
}

// -------------------------------------------------------------------

// MergeRequest

// repeated .merge.MergeRequest.Transaction Txn = 1;
inline int MergeRequest::txn_size() const {
  return txn_.size();
}
inline void MergeRequest::clear_txn() {
  txn_.Clear();
}
inline ::merge::MergeRequest_Transaction* MergeRequest::mutable_txn(int index) {
  // @@protoc_insertion_point(field_mutable:merge.MergeRequest.Txn)
  return txn_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::merge::MergeRequest_Transaction >*
MergeRequest::mutable_txn() {
  // @@protoc_insertion_point(field_mutable_list:merge.MergeRequest.Txn)
  return &txn_;
}
inline const ::merge::MergeRequest_Transaction& MergeRequest::txn(int index) const {
  // @@protoc_insertion_point(field_get:merge.MergeRequest.Txn)
  return txn_.Get(index);
}
inline ::merge::MergeRequest_Transaction* MergeRequest::add_txn() {
  // @@protoc_insertion_point(field_add:merge.MergeRequest.Txn)
  return txn_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::merge::MergeRequest_Transaction >&
MergeRequest::txn() const {
  // @@protoc_insertion_point(field_list:merge.MergeRequest.Txn)
  return txn_;
}

// string request_address = 2;
inline void MergeRequest::clear_request_address() {
  request_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MergeRequest::request_address() const {
  // @@protoc_insertion_point(field_get:merge.MergeRequest.request_address)
  return request_address_.GetNoArena();
}
inline void MergeRequest::set_request_address(const ::std::string& value) {
  
  request_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:merge.MergeRequest.request_address)
}
#if LANG_CXX11
inline void MergeRequest::set_request_address(::std::string&& value) {
  
  request_address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:merge.MergeRequest.request_address)
}
#endif
inline void MergeRequest::set_request_address(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  request_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:merge.MergeRequest.request_address)
}
inline void MergeRequest::set_request_address(const char* value, size_t size) {
  
  request_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:merge.MergeRequest.request_address)
}
inline ::std::string* MergeRequest::mutable_request_address() {
  
  // @@protoc_insertion_point(field_mutable:merge.MergeRequest.request_address)
  return request_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MergeRequest::release_request_address() {
  // @@protoc_insertion_point(field_release:merge.MergeRequest.request_address)
  
  return request_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MergeRequest::set_allocated_request_address(::std::string* request_address) {
  if (request_address != nullptr) {
    
  } else {
    
  }
  request_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), request_address);
  // @@protoc_insertion_point(field_set_allocated:merge.MergeRequest.request_address)
}

// -------------------------------------------------------------------

// MergeRequestNew_Transaction_Row_Column

// uint64 id = 1;
inline void MergeRequestNew_Transaction_Row_Column::clear_id() {
  id_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MergeRequestNew_Transaction_Row_Column::id() const {
  // @@protoc_insertion_point(field_get:merge.MergeRequestNew.Transaction.Row.Column.id)
  return id_;
}
inline void MergeRequestNew_Transaction_Row_Column::set_id(::google::protobuf::uint64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:merge.MergeRequestNew.Transaction.Row.Column.id)
}

// bytes value = 2;
inline void MergeRequestNew_Transaction_Row_Column::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MergeRequestNew_Transaction_Row_Column::value() const {
  // @@protoc_insertion_point(field_get:merge.MergeRequestNew.Transaction.Row.Column.value)
  return value_.GetNoArena();
}
inline void MergeRequestNew_Transaction_Row_Column::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:merge.MergeRequestNew.Transaction.Row.Column.value)
}
#if LANG_CXX11
inline void MergeRequestNew_Transaction_Row_Column::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:merge.MergeRequestNew.Transaction.Row.Column.value)
}
#endif
inline void MergeRequestNew_Transaction_Row_Column::set_value(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:merge.MergeRequestNew.Transaction.Row.Column.value)
}
inline void MergeRequestNew_Transaction_Row_Column::set_value(const void* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:merge.MergeRequestNew.Transaction.Row.Column.value)
}
inline ::std::string* MergeRequestNew_Transaction_Row_Column::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:merge.MergeRequestNew.Transaction.Row.Column.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MergeRequestNew_Transaction_Row_Column::release_value() {
  // @@protoc_insertion_point(field_release:merge.MergeRequestNew.Transaction.Row.Column.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MergeRequestNew_Transaction_Row_Column::set_allocated_value(::std::string* value) {
  if (value != nullptr) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:merge.MergeRequestNew.Transaction.Row.Column.value)
}

// -------------------------------------------------------------------

// MergeRequestNew_Transaction_Row

// string tableName = 1;
inline void MergeRequestNew_Transaction_Row::clear_tablename() {
  tablename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MergeRequestNew_Transaction_Row::tablename() const {
  // @@protoc_insertion_point(field_get:merge.MergeRequestNew.Transaction.Row.tableName)
  return tablename_.GetNoArena();
}
inline void MergeRequestNew_Transaction_Row::set_tablename(const ::std::string& value) {
  
  tablename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:merge.MergeRequestNew.Transaction.Row.tableName)
}
#if LANG_CXX11
inline void MergeRequestNew_Transaction_Row::set_tablename(::std::string&& value) {
  
  tablename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:merge.MergeRequestNew.Transaction.Row.tableName)
}
#endif
inline void MergeRequestNew_Transaction_Row::set_tablename(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  tablename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:merge.MergeRequestNew.Transaction.Row.tableName)
}
inline void MergeRequestNew_Transaction_Row::set_tablename(const char* value, size_t size) {
  
  tablename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:merge.MergeRequestNew.Transaction.Row.tableName)
}
inline ::std::string* MergeRequestNew_Transaction_Row::mutable_tablename() {
  
  // @@protoc_insertion_point(field_mutable:merge.MergeRequestNew.Transaction.Row.tableName)
  return tablename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MergeRequestNew_Transaction_Row::release_tablename() {
  // @@protoc_insertion_point(field_release:merge.MergeRequestNew.Transaction.Row.tableName)
  
  return tablename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MergeRequestNew_Transaction_Row::set_allocated_tablename(::std::string* tablename) {
  if (tablename != nullptr) {
    
  } else {
    
  }
  tablename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tablename);
  // @@protoc_insertion_point(field_set_allocated:merge.MergeRequestNew.Transaction.Row.tableName)
}

// bytes key = 2;
inline void MergeRequestNew_Transaction_Row::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MergeRequestNew_Transaction_Row::key() const {
  // @@protoc_insertion_point(field_get:merge.MergeRequestNew.Transaction.Row.key)
  return key_.GetNoArena();
}
inline void MergeRequestNew_Transaction_Row::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:merge.MergeRequestNew.Transaction.Row.key)
}
#if LANG_CXX11
inline void MergeRequestNew_Transaction_Row::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:merge.MergeRequestNew.Transaction.Row.key)
}
#endif
inline void MergeRequestNew_Transaction_Row::set_key(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:merge.MergeRequestNew.Transaction.Row.key)
}
inline void MergeRequestNew_Transaction_Row::set_key(const void* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:merge.MergeRequestNew.Transaction.Row.key)
}
inline ::std::string* MergeRequestNew_Transaction_Row::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:merge.MergeRequestNew.Transaction.Row.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MergeRequestNew_Transaction_Row::release_key() {
  // @@protoc_insertion_point(field_release:merge.MergeRequestNew.Transaction.Row.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MergeRequestNew_Transaction_Row::set_allocated_key(::std::string* key) {
  if (key != nullptr) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:merge.MergeRequestNew.Transaction.Row.key)
}

// repeated .merge.MergeRequestNew.Transaction.Row.Column col = 3;
inline int MergeRequestNew_Transaction_Row::col_size() const {
  return col_.size();
}
inline void MergeRequestNew_Transaction_Row::clear_col() {
  col_.Clear();
}
inline ::merge::MergeRequestNew_Transaction_Row_Column* MergeRequestNew_Transaction_Row::mutable_col(int index) {
  // @@protoc_insertion_point(field_mutable:merge.MergeRequestNew.Transaction.Row.col)
  return col_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::merge::MergeRequestNew_Transaction_Row_Column >*
MergeRequestNew_Transaction_Row::mutable_col() {
  // @@protoc_insertion_point(field_mutable_list:merge.MergeRequestNew.Transaction.Row.col)
  return &col_;
}
inline const ::merge::MergeRequestNew_Transaction_Row_Column& MergeRequestNew_Transaction_Row::col(int index) const {
  // @@protoc_insertion_point(field_get:merge.MergeRequestNew.Transaction.Row.col)
  return col_.Get(index);
}
inline ::merge::MergeRequestNew_Transaction_Row_Column* MergeRequestNew_Transaction_Row::add_col() {
  // @@protoc_insertion_point(field_add:merge.MergeRequestNew.Transaction.Row.col)
  return col_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::merge::MergeRequestNew_Transaction_Row_Column >&
MergeRequestNew_Transaction_Row::col() const {
  // @@protoc_insertion_point(field_list:merge.MergeRequestNew.Transaction.Row.col)
  return col_;
}

// -------------------------------------------------------------------

// MergeRequestNew_Transaction

// uint64 TxnID = 1;
inline void MergeRequestNew_Transaction::clear_txnid() {
  txnid_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MergeRequestNew_Transaction::txnid() const {
  // @@protoc_insertion_point(field_get:merge.MergeRequestNew.Transaction.TxnID)
  return txnid_;
}
inline void MergeRequestNew_Transaction::set_txnid(::google::protobuf::uint64 value) {
  
  txnid_ = value;
  // @@protoc_insertion_point(field_set:merge.MergeRequestNew.Transaction.TxnID)
}

// repeated .merge.MergeRequestNew.Transaction.Row row = 2;
inline int MergeRequestNew_Transaction::row_size() const {
  return row_.size();
}
inline void MergeRequestNew_Transaction::clear_row() {
  row_.Clear();
}
inline ::merge::MergeRequestNew_Transaction_Row* MergeRequestNew_Transaction::mutable_row(int index) {
  // @@protoc_insertion_point(field_mutable:merge.MergeRequestNew.Transaction.row)
  return row_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::merge::MergeRequestNew_Transaction_Row >*
MergeRequestNew_Transaction::mutable_row() {
  // @@protoc_insertion_point(field_mutable_list:merge.MergeRequestNew.Transaction.row)
  return &row_;
}
inline const ::merge::MergeRequestNew_Transaction_Row& MergeRequestNew_Transaction::row(int index) const {
  // @@protoc_insertion_point(field_get:merge.MergeRequestNew.Transaction.row)
  return row_.Get(index);
}
inline ::merge::MergeRequestNew_Transaction_Row* MergeRequestNew_Transaction::add_row() {
  // @@protoc_insertion_point(field_add:merge.MergeRequestNew.Transaction.row)
  return row_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::merge::MergeRequestNew_Transaction_Row >&
MergeRequestNew_Transaction::row() const {
  // @@protoc_insertion_point(field_list:merge.MergeRequestNew.Transaction.row)
  return row_;
}

// uint64 startts = 3;
inline void MergeRequestNew_Transaction::clear_startts() {
  startts_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MergeRequestNew_Transaction::startts() const {
  // @@protoc_insertion_point(field_get:merge.MergeRequestNew.Transaction.startts)
  return startts_;
}
inline void MergeRequestNew_Transaction::set_startts(::google::protobuf::uint64 value) {
  
  startts_ = value;
  // @@protoc_insertion_point(field_set:merge.MergeRequestNew.Transaction.startts)
}

// uint64 committs = 4;
inline void MergeRequestNew_Transaction::clear_committs() {
  committs_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MergeRequestNew_Transaction::committs() const {
  // @@protoc_insertion_point(field_get:merge.MergeRequestNew.Transaction.committs)
  return committs_;
}
inline void MergeRequestNew_Transaction::set_committs(::google::protobuf::uint64 value) {
  
  committs_ = value;
  // @@protoc_insertion_point(field_set:merge.MergeRequestNew.Transaction.committs)
}

// -------------------------------------------------------------------

// MergeRequestNew

// repeated .merge.MergeRequestNew.Transaction Txn = 1;
inline int MergeRequestNew::txn_size() const {
  return txn_.size();
}
inline void MergeRequestNew::clear_txn() {
  txn_.Clear();
}
inline ::merge::MergeRequestNew_Transaction* MergeRequestNew::mutable_txn(int index) {
  // @@protoc_insertion_point(field_mutable:merge.MergeRequestNew.Txn)
  return txn_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::merge::MergeRequestNew_Transaction >*
MergeRequestNew::mutable_txn() {
  // @@protoc_insertion_point(field_mutable_list:merge.MergeRequestNew.Txn)
  return &txn_;
}
inline const ::merge::MergeRequestNew_Transaction& MergeRequestNew::txn(int index) const {
  // @@protoc_insertion_point(field_get:merge.MergeRequestNew.Txn)
  return txn_.Get(index);
}
inline ::merge::MergeRequestNew_Transaction* MergeRequestNew::add_txn() {
  // @@protoc_insertion_point(field_add:merge.MergeRequestNew.Txn)
  return txn_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::merge::MergeRequestNew_Transaction >&
MergeRequestNew::txn() const {
  // @@protoc_insertion_point(field_list:merge.MergeRequestNew.Txn)
  return txn_;
}

// string request_address = 2;
inline void MergeRequestNew::clear_request_address() {
  request_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MergeRequestNew::request_address() const {
  // @@protoc_insertion_point(field_get:merge.MergeRequestNew.request_address)
  return request_address_.GetNoArena();
}
inline void MergeRequestNew::set_request_address(const ::std::string& value) {
  
  request_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:merge.MergeRequestNew.request_address)
}
#if LANG_CXX11
inline void MergeRequestNew::set_request_address(::std::string&& value) {
  
  request_address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:merge.MergeRequestNew.request_address)
}
#endif
inline void MergeRequestNew::set_request_address(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  request_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:merge.MergeRequestNew.request_address)
}
inline void MergeRequestNew::set_request_address(const char* value, size_t size) {
  
  request_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:merge.MergeRequestNew.request_address)
}
inline ::std::string* MergeRequestNew::mutable_request_address() {
  
  // @@protoc_insertion_point(field_mutable:merge.MergeRequestNew.request_address)
  return request_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MergeRequestNew::release_request_address() {
  // @@protoc_insertion_point(field_release:merge.MergeRequestNew.request_address)
  
  return request_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MergeRequestNew::set_allocated_request_address(::std::string* request_address) {
  if (request_address != nullptr) {
    
  } else {
    
  }
  request_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), request_address);
  // @@protoc_insertion_point(field_set_allocated:merge.MergeRequestNew.request_address)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace merge

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_message_2eproto
