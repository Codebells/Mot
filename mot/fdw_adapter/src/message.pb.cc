// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

#include "message.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_message_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MergeRequestNew_Transaction_Row_Column_message_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_message_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MergeRequest_Transaction_Row_message_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_message_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_MergeRequestNew_Transaction_Row_message_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_message_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_MergeRequestNew_Transaction_message_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_message_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_MergeRequest_Transaction_message_2eproto;
namespace merge {
class MergeRequest_Transaction_RowDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MergeRequest_Transaction_Row> _instance;
} _MergeRequest_Transaction_Row_default_instance_;
class MergeRequest_TransactionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MergeRequest_Transaction> _instance;
} _MergeRequest_Transaction_default_instance_;
class MergeRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MergeRequest> _instance;
} _MergeRequest_default_instance_;
class MergeRequestNew_Transaction_Row_ColumnDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MergeRequestNew_Transaction_Row_Column> _instance;
} _MergeRequestNew_Transaction_Row_Column_default_instance_;
class MergeRequestNew_Transaction_RowDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MergeRequestNew_Transaction_Row> _instance;
} _MergeRequestNew_Transaction_Row_default_instance_;
class MergeRequestNew_TransactionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MergeRequestNew_Transaction> _instance;
} _MergeRequestNew_Transaction_default_instance_;
class MergeRequestNewDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MergeRequestNew> _instance;
} _MergeRequestNew_default_instance_;
}  // namespace merge
static void InitDefaultsMergeRequest_Transaction_Row_message_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::merge::_MergeRequest_Transaction_Row_default_instance_;
    new (ptr) ::merge::MergeRequest_Transaction_Row();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::merge::MergeRequest_Transaction_Row::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MergeRequest_Transaction_Row_message_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMergeRequest_Transaction_Row_message_2eproto}, {}};

static void InitDefaultsMergeRequest_Transaction_message_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::merge::_MergeRequest_Transaction_default_instance_;
    new (ptr) ::merge::MergeRequest_Transaction();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::merge::MergeRequest_Transaction::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MergeRequest_Transaction_message_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMergeRequest_Transaction_message_2eproto}, {
      &scc_info_MergeRequest_Transaction_Row_message_2eproto.base,}};

static void InitDefaultsMergeRequest_message_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::merge::_MergeRequest_default_instance_;
    new (ptr) ::merge::MergeRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::merge::MergeRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MergeRequest_message_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMergeRequest_message_2eproto}, {
      &scc_info_MergeRequest_Transaction_message_2eproto.base,}};

static void InitDefaultsMergeRequestNew_Transaction_Row_Column_message_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::merge::_MergeRequestNew_Transaction_Row_Column_default_instance_;
    new (ptr) ::merge::MergeRequestNew_Transaction_Row_Column();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::merge::MergeRequestNew_Transaction_Row_Column::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MergeRequestNew_Transaction_Row_Column_message_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMergeRequestNew_Transaction_Row_Column_message_2eproto}, {}};

static void InitDefaultsMergeRequestNew_Transaction_Row_message_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::merge::_MergeRequestNew_Transaction_Row_default_instance_;
    new (ptr) ::merge::MergeRequestNew_Transaction_Row();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::merge::MergeRequestNew_Transaction_Row::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MergeRequestNew_Transaction_Row_message_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMergeRequestNew_Transaction_Row_message_2eproto}, {
      &scc_info_MergeRequestNew_Transaction_Row_Column_message_2eproto.base,}};

static void InitDefaultsMergeRequestNew_Transaction_message_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::merge::_MergeRequestNew_Transaction_default_instance_;
    new (ptr) ::merge::MergeRequestNew_Transaction();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::merge::MergeRequestNew_Transaction::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MergeRequestNew_Transaction_message_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMergeRequestNew_Transaction_message_2eproto}, {
      &scc_info_MergeRequestNew_Transaction_Row_message_2eproto.base,}};

static void InitDefaultsMergeRequestNew_message_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::merge::_MergeRequestNew_default_instance_;
    new (ptr) ::merge::MergeRequestNew();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::merge::MergeRequestNew::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MergeRequestNew_message_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMergeRequestNew_message_2eproto}, {
      &scc_info_MergeRequestNew_Transaction_message_2eproto.base,}};

void InitDefaults_message_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_MergeRequest_Transaction_Row_message_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MergeRequest_Transaction_message_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MergeRequest_message_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MergeRequestNew_Transaction_Row_Column_message_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MergeRequestNew_Transaction_Row_message_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MergeRequestNew_Transaction_message_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MergeRequestNew_message_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_message_2eproto[7];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_message_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_message_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_message_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::merge::MergeRequest_Transaction_Row, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::merge::MergeRequest_Transaction_Row, tablename_),
  PROTOBUF_FIELD_OFFSET(::merge::MergeRequest_Transaction_Row, key_),
  PROTOBUF_FIELD_OFFSET(::merge::MergeRequest_Transaction_Row, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::merge::MergeRequest_Transaction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::merge::MergeRequest_Transaction, txnid_),
  PROTOBUF_FIELD_OFFSET(::merge::MergeRequest_Transaction, row_),
  PROTOBUF_FIELD_OFFSET(::merge::MergeRequest_Transaction, startts_),
  PROTOBUF_FIELD_OFFSET(::merge::MergeRequest_Transaction, committs_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::merge::MergeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::merge::MergeRequest, txn_),
  PROTOBUF_FIELD_OFFSET(::merge::MergeRequest, request_address_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::merge::MergeRequestNew_Transaction_Row_Column, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::merge::MergeRequestNew_Transaction_Row_Column, id_),
  PROTOBUF_FIELD_OFFSET(::merge::MergeRequestNew_Transaction_Row_Column, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::merge::MergeRequestNew_Transaction_Row, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::merge::MergeRequestNew_Transaction_Row, tablename_),
  PROTOBUF_FIELD_OFFSET(::merge::MergeRequestNew_Transaction_Row, key_),
  PROTOBUF_FIELD_OFFSET(::merge::MergeRequestNew_Transaction_Row, col_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::merge::MergeRequestNew_Transaction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::merge::MergeRequestNew_Transaction, txnid_),
  PROTOBUF_FIELD_OFFSET(::merge::MergeRequestNew_Transaction, row_),
  PROTOBUF_FIELD_OFFSET(::merge::MergeRequestNew_Transaction, startts_),
  PROTOBUF_FIELD_OFFSET(::merge::MergeRequestNew_Transaction, committs_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::merge::MergeRequestNew, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::merge::MergeRequestNew, txn_),
  PROTOBUF_FIELD_OFFSET(::merge::MergeRequestNew, request_address_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::merge::MergeRequest_Transaction_Row)},
  { 8, -1, sizeof(::merge::MergeRequest_Transaction)},
  { 17, -1, sizeof(::merge::MergeRequest)},
  { 24, -1, sizeof(::merge::MergeRequestNew_Transaction_Row_Column)},
  { 31, -1, sizeof(::merge::MergeRequestNew_Transaction_Row)},
  { 39, -1, sizeof(::merge::MergeRequestNew_Transaction)},
  { 48, -1, sizeof(::merge::MergeRequestNew)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::merge::_MergeRequest_Transaction_Row_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::merge::_MergeRequest_Transaction_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::merge::_MergeRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::merge::_MergeRequestNew_Transaction_Row_Column_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::merge::_MergeRequestNew_Transaction_Row_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::merge::_MergeRequestNew_Transaction_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::merge::_MergeRequestNew_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_message_2eproto = {
  {}, AddDescriptors_message_2eproto, "message.proto", schemas,
  file_default_instances, TableStruct_message_2eproto::offsets,
  file_level_metadata_message_2eproto, 7, file_level_enum_descriptors_message_2eproto, file_level_service_descriptors_message_2eproto,
};

const char descriptor_table_protodef_message_2eproto[] =
  "\n\rmessage.proto\022\005merge\"\376\001\n\014MergeRequest\022"
  ",\n\003Txn\030\001 \003(\0132\037.merge.MergeRequest.Transa"
  "ction\022\027\n\017request_address\030\002 \001(\t\032\246\001\n\013Trans"
  "action\022\r\n\005TxnID\030\001 \001(\004\0220\n\003row\030\002 \003(\0132#.mer"
  "ge.MergeRequest.Transaction.Row\022\017\n\007start"
  "ts\030\003 \001(\004\022\020\n\010committs\030\004 \001(\004\0323\n\003Row\022\021\n\ttab"
  "leName\030\001 \001(\t\022\013\n\003key\030\002 \001(\014\022\014\n\004data\030\003 \001(\014\""
  "\333\002\n\017MergeRequestNew\022/\n\003Txn\030\001 \003(\0132\".merge"
  ".MergeRequestNew.Transaction\022\027\n\017request_"
  "address\030\002 \001(\t\032\375\001\n\013Transaction\022\r\n\005TxnID\030\001"
  " \001(\004\0223\n\003row\030\002 \003(\0132&.merge.MergeRequestNe"
  "w.Transaction.Row\022\017\n\007startts\030\003 \001(\004\022\020\n\010co"
  "mmitts\030\004 \001(\004\032\206\001\n\003Row\022\021\n\ttableName\030\001 \001(\t\022"
  "\013\n\003key\030\002 \001(\014\022:\n\003col\030\003 \003(\0132-.merge.MergeR"
  "equestNew.Transaction.Row.Column\032#\n\006Colu"
  "mn\022\n\n\002id\030\001 \001(\004\022\r\n\005value\030\002 \001(\014b\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_message_2eproto = {
  false, InitDefaults_message_2eproto, 
  descriptor_table_protodef_message_2eproto,
  "message.proto", &assign_descriptors_table_message_2eproto, 637,
};

void AddDescriptors_message_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_message_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_message_2eproto = []() { AddDescriptors_message_2eproto(); return true; }();
namespace merge {

// ===================================================================

void MergeRequest_Transaction_Row::InitAsDefaultInstance() {
}
class MergeRequest_Transaction_Row::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MergeRequest_Transaction_Row::kTableNameFieldNumber;
const int MergeRequest_Transaction_Row::kKeyFieldNumber;
const int MergeRequest_Transaction_Row::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MergeRequest_Transaction_Row::MergeRequest_Transaction_Row()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:merge.MergeRequest.Transaction.Row)
}
MergeRequest_Transaction_Row::MergeRequest_Transaction_Row(const MergeRequest_Transaction_Row& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tablename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.tablename().size() > 0) {
    tablename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tablename_);
  }
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  // @@protoc_insertion_point(copy_constructor:merge.MergeRequest.Transaction.Row)
}

void MergeRequest_Transaction_Row::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MergeRequest_Transaction_Row_message_2eproto.base);
  tablename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MergeRequest_Transaction_Row::~MergeRequest_Transaction_Row() {
  // @@protoc_insertion_point(destructor:merge.MergeRequest.Transaction.Row)
  SharedDtor();
}

void MergeRequest_Transaction_Row::SharedDtor() {
  tablename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MergeRequest_Transaction_Row::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MergeRequest_Transaction_Row& MergeRequest_Transaction_Row::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MergeRequest_Transaction_Row_message_2eproto.base);
  return *internal_default_instance();
}


void MergeRequest_Transaction_Row::Clear() {
// @@protoc_insertion_point(message_clear_start:merge.MergeRequest.Transaction.Row)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tablename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MergeRequest_Transaction_Row::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MergeRequest_Transaction_Row*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string tableName = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("merge.MergeRequest.Transaction.Row.tableName");
        object = msg->mutable_tablename();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bytes key = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_key();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bytes data = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_data();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MergeRequest_Transaction_Row::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:merge.MergeRequest.Transaction.Row)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string tableName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tablename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tablename().data(), static_cast<int>(this->tablename().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "merge.MergeRequest.Transaction.Row.tableName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:merge.MergeRequest.Transaction.Row)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:merge.MergeRequest.Transaction.Row)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MergeRequest_Transaction_Row::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:merge.MergeRequest.Transaction.Row)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string tableName = 1;
  if (this->tablename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tablename().data(), static_cast<int>(this->tablename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "merge.MergeRequest.Transaction.Row.tableName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->tablename(), output);
  }

  // bytes key = 2;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->key(), output);
  }

  // bytes data = 3;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:merge.MergeRequest.Transaction.Row)
}

::google::protobuf::uint8* MergeRequest_Transaction_Row::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:merge.MergeRequest.Transaction.Row)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string tableName = 1;
  if (this->tablename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tablename().data(), static_cast<int>(this->tablename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "merge.MergeRequest.Transaction.Row.tableName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->tablename(), target);
  }

  // bytes key = 2;
  if (this->key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->key(), target);
  }

  // bytes data = 3;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:merge.MergeRequest.Transaction.Row)
  return target;
}

size_t MergeRequest_Transaction_Row::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:merge.MergeRequest.Transaction.Row)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string tableName = 1;
  if (this->tablename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tablename());
  }

  // bytes key = 2;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->key());
  }

  // bytes data = 3;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MergeRequest_Transaction_Row::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:merge.MergeRequest.Transaction.Row)
  GOOGLE_DCHECK_NE(&from, this);
  const MergeRequest_Transaction_Row* source =
      ::google::protobuf::DynamicCastToGenerated<MergeRequest_Transaction_Row>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:merge.MergeRequest.Transaction.Row)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:merge.MergeRequest.Transaction.Row)
    MergeFrom(*source);
  }
}

void MergeRequest_Transaction_Row::MergeFrom(const MergeRequest_Transaction_Row& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:merge.MergeRequest.Transaction.Row)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.tablename().size() > 0) {

    tablename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tablename_);
  }
  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void MergeRequest_Transaction_Row::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:merge.MergeRequest.Transaction.Row)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MergeRequest_Transaction_Row::CopyFrom(const MergeRequest_Transaction_Row& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:merge.MergeRequest.Transaction.Row)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MergeRequest_Transaction_Row::IsInitialized() const {
  return true;
}

void MergeRequest_Transaction_Row::Swap(MergeRequest_Transaction_Row* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MergeRequest_Transaction_Row::InternalSwap(MergeRequest_Transaction_Row* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  tablename_.Swap(&other->tablename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata MergeRequest_Transaction_Row::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_message_2eproto);
  return ::file_level_metadata_message_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MergeRequest_Transaction::InitAsDefaultInstance() {
}
class MergeRequest_Transaction::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MergeRequest_Transaction::kTxnIDFieldNumber;
const int MergeRequest_Transaction::kRowFieldNumber;
const int MergeRequest_Transaction::kStarttsFieldNumber;
const int MergeRequest_Transaction::kCommittsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MergeRequest_Transaction::MergeRequest_Transaction()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:merge.MergeRequest.Transaction)
}
MergeRequest_Transaction::MergeRequest_Transaction(const MergeRequest_Transaction& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      row_(from.row_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&txnid_, &from.txnid_,
    static_cast<size_t>(reinterpret_cast<char*>(&committs_) -
    reinterpret_cast<char*>(&txnid_)) + sizeof(committs_));
  // @@protoc_insertion_point(copy_constructor:merge.MergeRequest.Transaction)
}

void MergeRequest_Transaction::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MergeRequest_Transaction_message_2eproto.base);
  ::memset(&txnid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&committs_) -
      reinterpret_cast<char*>(&txnid_)) + sizeof(committs_));
}

MergeRequest_Transaction::~MergeRequest_Transaction() {
  // @@protoc_insertion_point(destructor:merge.MergeRequest.Transaction)
  SharedDtor();
}

void MergeRequest_Transaction::SharedDtor() {
}

void MergeRequest_Transaction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MergeRequest_Transaction& MergeRequest_Transaction::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MergeRequest_Transaction_message_2eproto.base);
  return *internal_default_instance();
}


void MergeRequest_Transaction::Clear() {
// @@protoc_insertion_point(message_clear_start:merge.MergeRequest.Transaction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  row_.Clear();
  ::memset(&txnid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&committs_) -
      reinterpret_cast<char*>(&txnid_)) + sizeof(committs_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MergeRequest_Transaction::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MergeRequest_Transaction*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint64 TxnID = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_txnid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .merge.MergeRequest.Transaction.Row row = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::merge::MergeRequest_Transaction_Row::_InternalParse;
          object = msg->add_row();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      // uint64 startts = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_startts(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint64 committs = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_committs(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MergeRequest_Transaction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:merge.MergeRequest.Transaction)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 TxnID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &txnid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .merge.MergeRequest.Transaction.Row row = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_row()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 startts = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &startts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 committs = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &committs_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:merge.MergeRequest.Transaction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:merge.MergeRequest.Transaction)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MergeRequest_Transaction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:merge.MergeRequest.Transaction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 TxnID = 1;
  if (this->txnid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->txnid(), output);
  }

  // repeated .merge.MergeRequest.Transaction.Row row = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->row_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->row(static_cast<int>(i)),
      output);
  }

  // uint64 startts = 3;
  if (this->startts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->startts(), output);
  }

  // uint64 committs = 4;
  if (this->committs() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->committs(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:merge.MergeRequest.Transaction)
}

::google::protobuf::uint8* MergeRequest_Transaction::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:merge.MergeRequest.Transaction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 TxnID = 1;
  if (this->txnid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->txnid(), target);
  }

  // repeated .merge.MergeRequest.Transaction.Row row = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->row_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->row(static_cast<int>(i)), target);
  }

  // uint64 startts = 3;
  if (this->startts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->startts(), target);
  }

  // uint64 committs = 4;
  if (this->committs() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->committs(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:merge.MergeRequest.Transaction)
  return target;
}

size_t MergeRequest_Transaction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:merge.MergeRequest.Transaction)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .merge.MergeRequest.Transaction.Row row = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->row_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->row(static_cast<int>(i)));
    }
  }

  // uint64 TxnID = 1;
  if (this->txnid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->txnid());
  }

  // uint64 startts = 3;
  if (this->startts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->startts());
  }

  // uint64 committs = 4;
  if (this->committs() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->committs());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MergeRequest_Transaction::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:merge.MergeRequest.Transaction)
  GOOGLE_DCHECK_NE(&from, this);
  const MergeRequest_Transaction* source =
      ::google::protobuf::DynamicCastToGenerated<MergeRequest_Transaction>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:merge.MergeRequest.Transaction)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:merge.MergeRequest.Transaction)
    MergeFrom(*source);
  }
}

void MergeRequest_Transaction::MergeFrom(const MergeRequest_Transaction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:merge.MergeRequest.Transaction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  row_.MergeFrom(from.row_);
  if (from.txnid() != 0) {
    set_txnid(from.txnid());
  }
  if (from.startts() != 0) {
    set_startts(from.startts());
  }
  if (from.committs() != 0) {
    set_committs(from.committs());
  }
}

void MergeRequest_Transaction::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:merge.MergeRequest.Transaction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MergeRequest_Transaction::CopyFrom(const MergeRequest_Transaction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:merge.MergeRequest.Transaction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MergeRequest_Transaction::IsInitialized() const {
  return true;
}

void MergeRequest_Transaction::Swap(MergeRequest_Transaction* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MergeRequest_Transaction::InternalSwap(MergeRequest_Transaction* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&row_)->InternalSwap(CastToBase(&other->row_));
  swap(txnid_, other->txnid_);
  swap(startts_, other->startts_);
  swap(committs_, other->committs_);
}

::google::protobuf::Metadata MergeRequest_Transaction::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_message_2eproto);
  return ::file_level_metadata_message_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MergeRequest::InitAsDefaultInstance() {
}
class MergeRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MergeRequest::kTxnFieldNumber;
const int MergeRequest::kRequestAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MergeRequest::MergeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:merge.MergeRequest)
}
MergeRequest::MergeRequest(const MergeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      txn_(from.txn_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  request_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.request_address().size() > 0) {
    request_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_address_);
  }
  // @@protoc_insertion_point(copy_constructor:merge.MergeRequest)
}

void MergeRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MergeRequest_message_2eproto.base);
  request_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MergeRequest::~MergeRequest() {
  // @@protoc_insertion_point(destructor:merge.MergeRequest)
  SharedDtor();
}

void MergeRequest::SharedDtor() {
  request_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MergeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MergeRequest& MergeRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MergeRequest_message_2eproto.base);
  return *internal_default_instance();
}


void MergeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:merge.MergeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  txn_.Clear();
  request_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MergeRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MergeRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .merge.MergeRequest.Transaction Txn = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::merge::MergeRequest_Transaction::_InternalParse;
          object = msg->add_txn();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // string request_address = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("merge.MergeRequest.request_address");
        object = msg->mutable_request_address();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MergeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:merge.MergeRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .merge.MergeRequest.Transaction Txn = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_txn()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string request_address = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_request_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->request_address().data(), static_cast<int>(this->request_address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "merge.MergeRequest.request_address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:merge.MergeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:merge.MergeRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MergeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:merge.MergeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .merge.MergeRequest.Transaction Txn = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->txn_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->txn(static_cast<int>(i)),
      output);
  }

  // string request_address = 2;
  if (this->request_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_address().data(), static_cast<int>(this->request_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "merge.MergeRequest.request_address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->request_address(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:merge.MergeRequest)
}

::google::protobuf::uint8* MergeRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:merge.MergeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .merge.MergeRequest.Transaction Txn = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->txn_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->txn(static_cast<int>(i)), target);
  }

  // string request_address = 2;
  if (this->request_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_address().data(), static_cast<int>(this->request_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "merge.MergeRequest.request_address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->request_address(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:merge.MergeRequest)
  return target;
}

size_t MergeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:merge.MergeRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .merge.MergeRequest.Transaction Txn = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->txn_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->txn(static_cast<int>(i)));
    }
  }

  // string request_address = 2;
  if (this->request_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->request_address());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MergeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:merge.MergeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const MergeRequest* source =
      ::google::protobuf::DynamicCastToGenerated<MergeRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:merge.MergeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:merge.MergeRequest)
    MergeFrom(*source);
  }
}

void MergeRequest::MergeFrom(const MergeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:merge.MergeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  txn_.MergeFrom(from.txn_);
  if (from.request_address().size() > 0) {

    request_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_address_);
  }
}

void MergeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:merge.MergeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MergeRequest::CopyFrom(const MergeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:merge.MergeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MergeRequest::IsInitialized() const {
  return true;
}

void MergeRequest::Swap(MergeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MergeRequest::InternalSwap(MergeRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&txn_)->InternalSwap(CastToBase(&other->txn_));
  request_address_.Swap(&other->request_address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata MergeRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_message_2eproto);
  return ::file_level_metadata_message_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MergeRequestNew_Transaction_Row_Column::InitAsDefaultInstance() {
}
class MergeRequestNew_Transaction_Row_Column::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MergeRequestNew_Transaction_Row_Column::kIdFieldNumber;
const int MergeRequestNew_Transaction_Row_Column::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MergeRequestNew_Transaction_Row_Column::MergeRequestNew_Transaction_Row_Column()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:merge.MergeRequestNew.Transaction.Row.Column)
}
MergeRequestNew_Transaction_Row_Column::MergeRequestNew_Transaction_Row_Column(const MergeRequestNew_Transaction_Row_Column& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:merge.MergeRequestNew.Transaction.Row.Column)
}

void MergeRequestNew_Transaction_Row_Column::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MergeRequestNew_Transaction_Row_Column_message_2eproto.base);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = PROTOBUF_ULONGLONG(0);
}

MergeRequestNew_Transaction_Row_Column::~MergeRequestNew_Transaction_Row_Column() {
  // @@protoc_insertion_point(destructor:merge.MergeRequestNew.Transaction.Row.Column)
  SharedDtor();
}

void MergeRequestNew_Transaction_Row_Column::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MergeRequestNew_Transaction_Row_Column::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MergeRequestNew_Transaction_Row_Column& MergeRequestNew_Transaction_Row_Column::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MergeRequestNew_Transaction_Row_Column_message_2eproto.base);
  return *internal_default_instance();
}


void MergeRequestNew_Transaction_Row_Column::Clear() {
// @@protoc_insertion_point(message_clear_start:merge.MergeRequestNew.Transaction.Row.Column)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MergeRequestNew_Transaction_Row_Column::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MergeRequestNew_Transaction_Row_Column*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint64 id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bytes value = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_value();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MergeRequestNew_Transaction_Row_Column::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:merge.MergeRequestNew.Transaction.Row.Column)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:merge.MergeRequestNew.Transaction.Row.Column)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:merge.MergeRequestNew.Transaction.Row.Column)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MergeRequestNew_Transaction_Row_Column::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:merge.MergeRequestNew.Transaction.Row.Column)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:merge.MergeRequestNew.Transaction.Row.Column)
}

::google::protobuf::uint8* MergeRequestNew_Transaction_Row_Column::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:merge.MergeRequestNew.Transaction.Row.Column)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:merge.MergeRequestNew.Transaction.Row.Column)
  return target;
}

size_t MergeRequestNew_Transaction_Row_Column::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:merge.MergeRequestNew.Transaction.Row.Column)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  // uint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MergeRequestNew_Transaction_Row_Column::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:merge.MergeRequestNew.Transaction.Row.Column)
  GOOGLE_DCHECK_NE(&from, this);
  const MergeRequestNew_Transaction_Row_Column* source =
      ::google::protobuf::DynamicCastToGenerated<MergeRequestNew_Transaction_Row_Column>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:merge.MergeRequestNew.Transaction.Row.Column)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:merge.MergeRequestNew.Transaction.Row.Column)
    MergeFrom(*source);
  }
}

void MergeRequestNew_Transaction_Row_Column::MergeFrom(const MergeRequestNew_Transaction_Row_Column& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:merge.MergeRequestNew.Transaction.Row.Column)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void MergeRequestNew_Transaction_Row_Column::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:merge.MergeRequestNew.Transaction.Row.Column)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MergeRequestNew_Transaction_Row_Column::CopyFrom(const MergeRequestNew_Transaction_Row_Column& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:merge.MergeRequestNew.Transaction.Row.Column)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MergeRequestNew_Transaction_Row_Column::IsInitialized() const {
  return true;
}

void MergeRequestNew_Transaction_Row_Column::Swap(MergeRequestNew_Transaction_Row_Column* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MergeRequestNew_Transaction_Row_Column::InternalSwap(MergeRequestNew_Transaction_Row_Column* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
}

::google::protobuf::Metadata MergeRequestNew_Transaction_Row_Column::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_message_2eproto);
  return ::file_level_metadata_message_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MergeRequestNew_Transaction_Row::InitAsDefaultInstance() {
}
class MergeRequestNew_Transaction_Row::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MergeRequestNew_Transaction_Row::kTableNameFieldNumber;
const int MergeRequestNew_Transaction_Row::kKeyFieldNumber;
const int MergeRequestNew_Transaction_Row::kColFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MergeRequestNew_Transaction_Row::MergeRequestNew_Transaction_Row()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:merge.MergeRequestNew.Transaction.Row)
}
MergeRequestNew_Transaction_Row::MergeRequestNew_Transaction_Row(const MergeRequestNew_Transaction_Row& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      col_(from.col_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tablename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.tablename().size() > 0) {
    tablename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tablename_);
  }
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  // @@protoc_insertion_point(copy_constructor:merge.MergeRequestNew.Transaction.Row)
}

void MergeRequestNew_Transaction_Row::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MergeRequestNew_Transaction_Row_message_2eproto.base);
  tablename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MergeRequestNew_Transaction_Row::~MergeRequestNew_Transaction_Row() {
  // @@protoc_insertion_point(destructor:merge.MergeRequestNew.Transaction.Row)
  SharedDtor();
}

void MergeRequestNew_Transaction_Row::SharedDtor() {
  tablename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MergeRequestNew_Transaction_Row::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MergeRequestNew_Transaction_Row& MergeRequestNew_Transaction_Row::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MergeRequestNew_Transaction_Row_message_2eproto.base);
  return *internal_default_instance();
}


void MergeRequestNew_Transaction_Row::Clear() {
// @@protoc_insertion_point(message_clear_start:merge.MergeRequestNew.Transaction.Row)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  col_.Clear();
  tablename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MergeRequestNew_Transaction_Row::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MergeRequestNew_Transaction_Row*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string tableName = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("merge.MergeRequestNew.Transaction.Row.tableName");
        object = msg->mutable_tablename();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bytes key = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_key();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated .merge.MergeRequestNew.Transaction.Row.Column col = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::merge::MergeRequestNew_Transaction_Row_Column::_InternalParse;
          object = msg->add_col();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MergeRequestNew_Transaction_Row::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:merge.MergeRequestNew.Transaction.Row)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string tableName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tablename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tablename().data(), static_cast<int>(this->tablename().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "merge.MergeRequestNew.Transaction.Row.tableName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .merge.MergeRequestNew.Transaction.Row.Column col = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_col()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:merge.MergeRequestNew.Transaction.Row)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:merge.MergeRequestNew.Transaction.Row)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MergeRequestNew_Transaction_Row::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:merge.MergeRequestNew.Transaction.Row)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string tableName = 1;
  if (this->tablename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tablename().data(), static_cast<int>(this->tablename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "merge.MergeRequestNew.Transaction.Row.tableName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->tablename(), output);
  }

  // bytes key = 2;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->key(), output);
  }

  // repeated .merge.MergeRequestNew.Transaction.Row.Column col = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->col_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->col(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:merge.MergeRequestNew.Transaction.Row)
}

::google::protobuf::uint8* MergeRequestNew_Transaction_Row::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:merge.MergeRequestNew.Transaction.Row)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string tableName = 1;
  if (this->tablename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tablename().data(), static_cast<int>(this->tablename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "merge.MergeRequestNew.Transaction.Row.tableName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->tablename(), target);
  }

  // bytes key = 2;
  if (this->key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->key(), target);
  }

  // repeated .merge.MergeRequestNew.Transaction.Row.Column col = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->col_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->col(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:merge.MergeRequestNew.Transaction.Row)
  return target;
}

size_t MergeRequestNew_Transaction_Row::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:merge.MergeRequestNew.Transaction.Row)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .merge.MergeRequestNew.Transaction.Row.Column col = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->col_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->col(static_cast<int>(i)));
    }
  }

  // string tableName = 1;
  if (this->tablename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tablename());
  }

  // bytes key = 2;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->key());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MergeRequestNew_Transaction_Row::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:merge.MergeRequestNew.Transaction.Row)
  GOOGLE_DCHECK_NE(&from, this);
  const MergeRequestNew_Transaction_Row* source =
      ::google::protobuf::DynamicCastToGenerated<MergeRequestNew_Transaction_Row>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:merge.MergeRequestNew.Transaction.Row)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:merge.MergeRequestNew.Transaction.Row)
    MergeFrom(*source);
  }
}

void MergeRequestNew_Transaction_Row::MergeFrom(const MergeRequestNew_Transaction_Row& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:merge.MergeRequestNew.Transaction.Row)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  col_.MergeFrom(from.col_);
  if (from.tablename().size() > 0) {

    tablename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tablename_);
  }
  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
}

void MergeRequestNew_Transaction_Row::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:merge.MergeRequestNew.Transaction.Row)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MergeRequestNew_Transaction_Row::CopyFrom(const MergeRequestNew_Transaction_Row& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:merge.MergeRequestNew.Transaction.Row)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MergeRequestNew_Transaction_Row::IsInitialized() const {
  return true;
}

void MergeRequestNew_Transaction_Row::Swap(MergeRequestNew_Transaction_Row* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MergeRequestNew_Transaction_Row::InternalSwap(MergeRequestNew_Transaction_Row* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&col_)->InternalSwap(CastToBase(&other->col_));
  tablename_.Swap(&other->tablename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata MergeRequestNew_Transaction_Row::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_message_2eproto);
  return ::file_level_metadata_message_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MergeRequestNew_Transaction::InitAsDefaultInstance() {
}
class MergeRequestNew_Transaction::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MergeRequestNew_Transaction::kTxnIDFieldNumber;
const int MergeRequestNew_Transaction::kRowFieldNumber;
const int MergeRequestNew_Transaction::kStarttsFieldNumber;
const int MergeRequestNew_Transaction::kCommittsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MergeRequestNew_Transaction::MergeRequestNew_Transaction()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:merge.MergeRequestNew.Transaction)
}
MergeRequestNew_Transaction::MergeRequestNew_Transaction(const MergeRequestNew_Transaction& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      row_(from.row_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&txnid_, &from.txnid_,
    static_cast<size_t>(reinterpret_cast<char*>(&committs_) -
    reinterpret_cast<char*>(&txnid_)) + sizeof(committs_));
  // @@protoc_insertion_point(copy_constructor:merge.MergeRequestNew.Transaction)
}

void MergeRequestNew_Transaction::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MergeRequestNew_Transaction_message_2eproto.base);
  ::memset(&txnid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&committs_) -
      reinterpret_cast<char*>(&txnid_)) + sizeof(committs_));
}

MergeRequestNew_Transaction::~MergeRequestNew_Transaction() {
  // @@protoc_insertion_point(destructor:merge.MergeRequestNew.Transaction)
  SharedDtor();
}

void MergeRequestNew_Transaction::SharedDtor() {
}

void MergeRequestNew_Transaction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MergeRequestNew_Transaction& MergeRequestNew_Transaction::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MergeRequestNew_Transaction_message_2eproto.base);
  return *internal_default_instance();
}


void MergeRequestNew_Transaction::Clear() {
// @@protoc_insertion_point(message_clear_start:merge.MergeRequestNew.Transaction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  row_.Clear();
  ::memset(&txnid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&committs_) -
      reinterpret_cast<char*>(&txnid_)) + sizeof(committs_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MergeRequestNew_Transaction::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MergeRequestNew_Transaction*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint64 TxnID = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_txnid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .merge.MergeRequestNew.Transaction.Row row = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::merge::MergeRequestNew_Transaction_Row::_InternalParse;
          object = msg->add_row();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      // uint64 startts = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_startts(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint64 committs = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_committs(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MergeRequestNew_Transaction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:merge.MergeRequestNew.Transaction)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 TxnID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &txnid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .merge.MergeRequestNew.Transaction.Row row = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_row()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 startts = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &startts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 committs = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &committs_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:merge.MergeRequestNew.Transaction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:merge.MergeRequestNew.Transaction)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MergeRequestNew_Transaction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:merge.MergeRequestNew.Transaction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 TxnID = 1;
  if (this->txnid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->txnid(), output);
  }

  // repeated .merge.MergeRequestNew.Transaction.Row row = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->row_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->row(static_cast<int>(i)),
      output);
  }

  // uint64 startts = 3;
  if (this->startts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->startts(), output);
  }

  // uint64 committs = 4;
  if (this->committs() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->committs(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:merge.MergeRequestNew.Transaction)
}

::google::protobuf::uint8* MergeRequestNew_Transaction::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:merge.MergeRequestNew.Transaction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 TxnID = 1;
  if (this->txnid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->txnid(), target);
  }

  // repeated .merge.MergeRequestNew.Transaction.Row row = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->row_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->row(static_cast<int>(i)), target);
  }

  // uint64 startts = 3;
  if (this->startts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->startts(), target);
  }

  // uint64 committs = 4;
  if (this->committs() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->committs(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:merge.MergeRequestNew.Transaction)
  return target;
}

size_t MergeRequestNew_Transaction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:merge.MergeRequestNew.Transaction)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .merge.MergeRequestNew.Transaction.Row row = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->row_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->row(static_cast<int>(i)));
    }
  }

  // uint64 TxnID = 1;
  if (this->txnid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->txnid());
  }

  // uint64 startts = 3;
  if (this->startts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->startts());
  }

  // uint64 committs = 4;
  if (this->committs() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->committs());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MergeRequestNew_Transaction::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:merge.MergeRequestNew.Transaction)
  GOOGLE_DCHECK_NE(&from, this);
  const MergeRequestNew_Transaction* source =
      ::google::protobuf::DynamicCastToGenerated<MergeRequestNew_Transaction>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:merge.MergeRequestNew.Transaction)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:merge.MergeRequestNew.Transaction)
    MergeFrom(*source);
  }
}

void MergeRequestNew_Transaction::MergeFrom(const MergeRequestNew_Transaction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:merge.MergeRequestNew.Transaction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  row_.MergeFrom(from.row_);
  if (from.txnid() != 0) {
    set_txnid(from.txnid());
  }
  if (from.startts() != 0) {
    set_startts(from.startts());
  }
  if (from.committs() != 0) {
    set_committs(from.committs());
  }
}

void MergeRequestNew_Transaction::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:merge.MergeRequestNew.Transaction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MergeRequestNew_Transaction::CopyFrom(const MergeRequestNew_Transaction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:merge.MergeRequestNew.Transaction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MergeRequestNew_Transaction::IsInitialized() const {
  return true;
}

void MergeRequestNew_Transaction::Swap(MergeRequestNew_Transaction* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MergeRequestNew_Transaction::InternalSwap(MergeRequestNew_Transaction* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&row_)->InternalSwap(CastToBase(&other->row_));
  swap(txnid_, other->txnid_);
  swap(startts_, other->startts_);
  swap(committs_, other->committs_);
}

::google::protobuf::Metadata MergeRequestNew_Transaction::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_message_2eproto);
  return ::file_level_metadata_message_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MergeRequestNew::InitAsDefaultInstance() {
}
class MergeRequestNew::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MergeRequestNew::kTxnFieldNumber;
const int MergeRequestNew::kRequestAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MergeRequestNew::MergeRequestNew()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:merge.MergeRequestNew)
}
MergeRequestNew::MergeRequestNew(const MergeRequestNew& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      txn_(from.txn_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  request_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.request_address().size() > 0) {
    request_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_address_);
  }
  // @@protoc_insertion_point(copy_constructor:merge.MergeRequestNew)
}

void MergeRequestNew::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MergeRequestNew_message_2eproto.base);
  request_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MergeRequestNew::~MergeRequestNew() {
  // @@protoc_insertion_point(destructor:merge.MergeRequestNew)
  SharedDtor();
}

void MergeRequestNew::SharedDtor() {
  request_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MergeRequestNew::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MergeRequestNew& MergeRequestNew::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MergeRequestNew_message_2eproto.base);
  return *internal_default_instance();
}


void MergeRequestNew::Clear() {
// @@protoc_insertion_point(message_clear_start:merge.MergeRequestNew)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  txn_.Clear();
  request_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MergeRequestNew::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MergeRequestNew*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .merge.MergeRequestNew.Transaction Txn = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::merge::MergeRequestNew_Transaction::_InternalParse;
          object = msg->add_txn();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // string request_address = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("merge.MergeRequestNew.request_address");
        object = msg->mutable_request_address();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MergeRequestNew::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:merge.MergeRequestNew)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .merge.MergeRequestNew.Transaction Txn = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_txn()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string request_address = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_request_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->request_address().data(), static_cast<int>(this->request_address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "merge.MergeRequestNew.request_address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:merge.MergeRequestNew)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:merge.MergeRequestNew)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MergeRequestNew::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:merge.MergeRequestNew)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .merge.MergeRequestNew.Transaction Txn = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->txn_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->txn(static_cast<int>(i)),
      output);
  }

  // string request_address = 2;
  if (this->request_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_address().data(), static_cast<int>(this->request_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "merge.MergeRequestNew.request_address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->request_address(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:merge.MergeRequestNew)
}

::google::protobuf::uint8* MergeRequestNew::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:merge.MergeRequestNew)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .merge.MergeRequestNew.Transaction Txn = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->txn_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->txn(static_cast<int>(i)), target);
  }

  // string request_address = 2;
  if (this->request_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_address().data(), static_cast<int>(this->request_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "merge.MergeRequestNew.request_address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->request_address(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:merge.MergeRequestNew)
  return target;
}

size_t MergeRequestNew::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:merge.MergeRequestNew)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .merge.MergeRequestNew.Transaction Txn = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->txn_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->txn(static_cast<int>(i)));
    }
  }

  // string request_address = 2;
  if (this->request_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->request_address());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MergeRequestNew::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:merge.MergeRequestNew)
  GOOGLE_DCHECK_NE(&from, this);
  const MergeRequestNew* source =
      ::google::protobuf::DynamicCastToGenerated<MergeRequestNew>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:merge.MergeRequestNew)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:merge.MergeRequestNew)
    MergeFrom(*source);
  }
}

void MergeRequestNew::MergeFrom(const MergeRequestNew& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:merge.MergeRequestNew)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  txn_.MergeFrom(from.txn_);
  if (from.request_address().size() > 0) {

    request_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_address_);
  }
}

void MergeRequestNew::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:merge.MergeRequestNew)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MergeRequestNew::CopyFrom(const MergeRequestNew& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:merge.MergeRequestNew)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MergeRequestNew::IsInitialized() const {
  return true;
}

void MergeRequestNew::Swap(MergeRequestNew* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MergeRequestNew::InternalSwap(MergeRequestNew* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&txn_)->InternalSwap(CastToBase(&other->txn_));
  request_address_.Swap(&other->request_address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata MergeRequestNew::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_message_2eproto);
  return ::file_level_metadata_message_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace merge
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::merge::MergeRequest_Transaction_Row* Arena::CreateMaybeMessage< ::merge::MergeRequest_Transaction_Row >(Arena* arena) {
  return Arena::CreateInternal< ::merge::MergeRequest_Transaction_Row >(arena);
}
template<> PROTOBUF_NOINLINE ::merge::MergeRequest_Transaction* Arena::CreateMaybeMessage< ::merge::MergeRequest_Transaction >(Arena* arena) {
  return Arena::CreateInternal< ::merge::MergeRequest_Transaction >(arena);
}
template<> PROTOBUF_NOINLINE ::merge::MergeRequest* Arena::CreateMaybeMessage< ::merge::MergeRequest >(Arena* arena) {
  return Arena::CreateInternal< ::merge::MergeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::merge::MergeRequestNew_Transaction_Row_Column* Arena::CreateMaybeMessage< ::merge::MergeRequestNew_Transaction_Row_Column >(Arena* arena) {
  return Arena::CreateInternal< ::merge::MergeRequestNew_Transaction_Row_Column >(arena);
}
template<> PROTOBUF_NOINLINE ::merge::MergeRequestNew_Transaction_Row* Arena::CreateMaybeMessage< ::merge::MergeRequestNew_Transaction_Row >(Arena* arena) {
  return Arena::CreateInternal< ::merge::MergeRequestNew_Transaction_Row >(arena);
}
template<> PROTOBUF_NOINLINE ::merge::MergeRequestNew_Transaction* Arena::CreateMaybeMessage< ::merge::MergeRequestNew_Transaction >(Arena* arena) {
  return Arena::CreateInternal< ::merge::MergeRequestNew_Transaction >(arena);
}
template<> PROTOBUF_NOINLINE ::merge::MergeRequestNew* Arena::CreateMaybeMessage< ::merge::MergeRequestNew >(Arena* arena) {
  return Arena::CreateInternal< ::merge::MergeRequestNew >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
